#version 300 es
precision highp sampler2DArray;
uniform mat4 uTransform;
in vec2 aPosition;
uniform sampler2D sColor0;
uniform sampler2D sColor1;
uniform sampler2D sColor2;
uniform highp sampler2D sRenderTasks;
uniform highp sampler2D sGpuCache;
flat out lowp vec4 vTransformBounds;
uniform highp sampler2D sTransformPalette;
uniform highp sampler2D sPrimitiveHeadersF;
uniform highp isampler2D sPrimitiveHeadersI;
in highp ivec4 aData;
out lowp vec3 vUv_Y;
flat out lowp vec4 vUvBounds_Y;
out lowp vec3 vUv_U;
flat out lowp vec4 vUvBounds_U;
out lowp vec3 vUv_V;
flat out lowp vec4 vUvBounds_V;
flat out highp float vCoefficient;
flat out mat3 vYuvColorMatrix;
flat out highp int vFormat;
void main ()
{
  highp int tmpvar_1;
  highp int tmpvar_2;
  tmpvar_1 = (aData.y >> 16);
  tmpvar_2 = (aData.z & 65535);
  highp float tmpvar_3;
  highp ivec2 tmpvar_4;
  highp uint tmpvar_5;
  tmpvar_5 = uint(aData.x);
  tmpvar_4.x = int((2u * (tmpvar_5 % 512u)));
  tmpvar_4.y = int((tmpvar_5 / 512u));
  highp vec4 tmpvar_6;
  tmpvar_6 = texelFetch (sPrimitiveHeadersF, tmpvar_4, 0);
  highp vec4 tmpvar_7;
  tmpvar_7 = texelFetch (sPrimitiveHeadersF, (tmpvar_4 + ivec2(1, 0)), 0);
  highp vec2 tmpvar_8;
  highp vec2 tmpvar_9;
  tmpvar_8 = tmpvar_6.xy;
  tmpvar_9 = tmpvar_6.zw;
  highp ivec2 tmpvar_10;
  tmpvar_10.x = int((2u * (tmpvar_5 % 512u)));
  tmpvar_10.y = int((tmpvar_5 / 512u));
  highp ivec4 tmpvar_11;
  tmpvar_11 = texelFetch (sPrimitiveHeadersI, tmpvar_10, 0);
  highp ivec4 tmpvar_12;
  tmpvar_12 = texelFetch (sPrimitiveHeadersI, (tmpvar_10 + ivec2(1, 0)), 0);
  tmpvar_3 = float(tmpvar_11.x);
  highp mat4 tmpvar_13;
  bool tmpvar_14;
  tmpvar_14 = ((tmpvar_11.z >> 24) == 0);
  highp int tmpvar_15;
  tmpvar_15 = (tmpvar_11.z & 16777215);
  highp ivec2 tmpvar_16;
  tmpvar_16.x = int((8u * (
    uint(tmpvar_15)
   % 128u)));
  tmpvar_16.y = int((uint(tmpvar_15) / 128u));
  tmpvar_13[0] = texelFetch (sTransformPalette, tmpvar_16, 0);
  tmpvar_13[1] = texelFetch (sTransformPalette, (tmpvar_16 + ivec2(1, 0)), 0);
  tmpvar_13[2] = texelFetch (sTransformPalette, (tmpvar_16 + ivec2(2, 0)), 0);
  tmpvar_13[3] = texelFetch (sTransformPalette, (tmpvar_16 + ivec2(3, 0)), 0);
  highp ivec2 tmpvar_17;
  tmpvar_17.x = int((2u * (
    uint(tmpvar_1)
   % 512u)));
  tmpvar_17.y = int((uint(tmpvar_1) / 512u));
  highp vec4 tmpvar_18;
  tmpvar_18 = texelFetch (sRenderTasks, tmpvar_17, 0);
  highp vec4 tmpvar_19;
  tmpvar_19 = texelFetch (sRenderTasks, (tmpvar_17 + ivec2(1, 0)), 0);
  lowp vec2 tmpvar_20;
  highp vec2 tmpvar_21;
  highp vec2 tmpvar_22;
  highp int tmpvar_23;
  tmpvar_23 = ((aData.z >> 16) & 255);
  if ((tmpvar_2 == 65535)) {
    tmpvar_21 = tmpvar_8;
    tmpvar_22 = tmpvar_9;
  } else {
    highp int tmpvar_24;
    tmpvar_24 = ((tmpvar_11.y + 1) + (tmpvar_2 * 2));
    highp ivec2 tmpvar_25;
    tmpvar_25.x = int((uint(tmpvar_24) % 1024u));
    tmpvar_25.y = int((uint(tmpvar_24) / 1024u));
    highp vec4 tmpvar_26;
    tmpvar_26 = texelFetch (sGpuCache, tmpvar_25, 0);
    tmpvar_22 = tmpvar_26.zw;
    tmpvar_21 = (tmpvar_26.xy + tmpvar_6.xy);
  };
  if (tmpvar_14) {
    lowp vec2 tmpvar_27;
    tmpvar_27 = clamp ((tmpvar_21 + (tmpvar_22 * aPosition)), tmpvar_7.xy, (tmpvar_7.xy + tmpvar_7.zw));
    lowp vec4 tmpvar_28;
    tmpvar_28.zw = vec2(0.0, 1.0);
    tmpvar_28.xy = tmpvar_27;
    highp vec4 tmpvar_29;
    tmpvar_29 = (tmpvar_13 * tmpvar_28);
    highp vec4 tmpvar_30;
    tmpvar_30.xy = ((tmpvar_29.xy * tmpvar_19.y) + ((
      -(tmpvar_19.zw)
     + tmpvar_18.xy) * tmpvar_29.w));
    tmpvar_30.z = (tmpvar_3 * tmpvar_29.w);
    tmpvar_30.w = tmpvar_29.w;
    gl_Position = (uTransform * tmpvar_30);
    tmpvar_20 = tmpvar_27;
  } else {
    lowp vec4 tmpvar_31;
    tmpvar_31 = mix(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0), bvec4(notEqual ((tmpvar_23 & ivec4(1, 2, 4, 8)), ivec4(0, 0, 0, 0))));
    lowp vec2 tmpvar_32;
    lowp vec2 tmpvar_33;
    tmpvar_32 = tmpvar_21;
    tmpvar_33 = tmpvar_22;
    highp vec2 tmpvar_34;
    tmpvar_34 = (tmpvar_7.xy + tmpvar_7.zw);
    lowp vec2 tmpvar_35;
    tmpvar_35 = clamp (tmpvar_32, tmpvar_7.xy, tmpvar_34);
    lowp vec2 tmpvar_36;
    tmpvar_36 = clamp ((tmpvar_32 + tmpvar_33), tmpvar_7.xy, tmpvar_34);
    lowp vec4 tmpvar_37;
    tmpvar_37 = (vec4(2.0, 2.0, 2.0, 2.0) * tmpvar_31);
    tmpvar_32 = (tmpvar_32 - tmpvar_37.xy);
    tmpvar_33 = (tmpvar_33 + (tmpvar_37.xy + tmpvar_37.zw));
    lowp vec2 tmpvar_38;
    tmpvar_38 = (tmpvar_32 + (tmpvar_33 * aPosition));
    lowp vec4 tmpvar_39;
    tmpvar_39.zw = vec2(0.0, 1.0);
    tmpvar_39.xy = tmpvar_38;
    highp vec4 tmpvar_40;
    tmpvar_40 = (tmpvar_13 * tmpvar_39);
    highp vec4 tmpvar_41;
    tmpvar_41.xy = ((tmpvar_40.xy * tmpvar_19.y) + ((tmpvar_18.xy - tmpvar_19.zw) * tmpvar_40.w));
    tmpvar_41.z = (tmpvar_3 * tmpvar_40.w);
    tmpvar_41.w = tmpvar_40.w;
    gl_Position = (uTransform * tmpvar_41);
    highp vec4 tmpvar_42;
    tmpvar_42.xy = clamp (tmpvar_6.xy, tmpvar_7.xy, tmpvar_34);
    tmpvar_42.zw = clamp ((tmpvar_6.xy + tmpvar_6.zw), tmpvar_7.xy, tmpvar_34);
    lowp vec4 tmpvar_43;
    tmpvar_43.xy = tmpvar_35;
    tmpvar_43.zw = tmpvar_36;
    vTransformBounds = mix (tmpvar_42, tmpvar_43, tmpvar_31);
    tmpvar_20 = tmpvar_38;
  };
  highp int tmpvar_44;
  lowp vec2 f_45;
  f_45 = ((tmpvar_20 - tmpvar_6.xy) / tmpvar_6.zw);
  highp ivec2 tmpvar_46;
  tmpvar_46.x = int((uint(tmpvar_11.y) % 1024u));
  tmpvar_46.y = int((uint(tmpvar_11.y) / 1024u));
  highp vec4 tmpvar_47;
  tmpvar_47 = texelFetch (sGpuCache, tmpvar_46, 0);
  tmpvar_44 = int(tmpvar_47.z);
  vCoefficient = tmpvar_47.x;
  highp int color_space_48;
  color_space_48 = int(tmpvar_47.y);
  mat3 tmpvar_49;
  bool tmpvar_50;
  tmpvar_50 = bool(0);
  if ((0 == color_space_48)) tmpvar_50 = bool(1);
  if (tmpvar_50) {
    tmpvar_49 = mat3(1.16438, 1.16438, 1.16438, 0.0, -0.39176, 2.01723, 1.59603, -0.81297, 0.0);
  } else {
    if ((1 == color_space_48)) tmpvar_50 = bool(1);
    if (tmpvar_50) {
      tmpvar_49 = mat3(1.16438, 1.16438, 1.16438, 0.0, -0.21325, 2.1124, 1.79274, -0.53291, 0.0);
    } else {
      tmpvar_50 = bool(1);
      tmpvar_49 = mat3(1.164384, 1.164384, 1.164384, 0.0, -0.1873261, 2.141772, 1.678674, -0.6504243, 0.0);
    };
  };
  vYuvColorMatrix = tmpvar_49;
  vFormat = tmpvar_44;
  if ((tmpvar_44 == 1)) {
    highp ivec2 tmpvar_51;
    tmpvar_51.x = int((uint(tmpvar_12.x) % 1024u));
    tmpvar_51.y = int((uint(tmpvar_12.x) / 1024u));
    highp vec4 tmpvar_52;
    tmpvar_52 = texelFetch (sGpuCache, tmpvar_51, 0);
    highp float tmpvar_53;
    tmpvar_53 = texelFetch (sGpuCache, (tmpvar_51 + ivec2(1, 0)), 0).x;
    highp ivec2 tmpvar_54;
    tmpvar_54.x = int((uint(tmpvar_12.y) % 1024u));
    tmpvar_54.y = int((uint(tmpvar_12.y) / 1024u));
    highp vec4 tmpvar_55;
    tmpvar_55 = texelFetch (sGpuCache, tmpvar_54, 0);
    highp float tmpvar_56;
    tmpvar_56 = texelFetch (sGpuCache, (tmpvar_54 + ivec2(1, 0)), 0).x;
    highp ivec2 tmpvar_57;
    tmpvar_57.x = int((uint(tmpvar_12.z) % 1024u));
    tmpvar_57.y = int((uint(tmpvar_12.z) / 1024u));
    highp vec4 tmpvar_58;
    tmpvar_58 = texelFetch (sGpuCache, tmpvar_57, 0);
    highp float tmpvar_59;
    tmpvar_59 = texelFetch (sGpuCache, (tmpvar_57 + ivec2(1, 0)), 0).x;
    lowp vec2 tmpvar_60;
    tmpvar_60 = vec2(textureSize (sColor0, 0));
    lowp vec3 uv_61;
    uv_61.z = tmpvar_53;
    lowp vec4 tmpvar_62;
    tmpvar_62.xy = (tmpvar_52.xy + vec2(0.5, 0.5));
    tmpvar_62.zw = (tmpvar_52.zw - vec2(0.5, 0.5));
    uv_61.xy = (mix (tmpvar_52.xy, tmpvar_52.zw, f_45) / tmpvar_60);
    vUv_Y = uv_61;
    vUvBounds_Y = (tmpvar_62 / tmpvar_60.xyxy);
    lowp vec2 tmpvar_63;
    tmpvar_63 = vec2(textureSize (sColor1, 0));
    lowp vec3 uv_64;
    uv_64.z = tmpvar_56;
    lowp vec4 tmpvar_65;
    tmpvar_65.xy = (tmpvar_55.xy + vec2(0.5, 0.5));
    tmpvar_65.zw = (tmpvar_55.zw - vec2(0.5, 0.5));
    uv_64.xy = (mix (tmpvar_55.xy, tmpvar_55.zw, f_45) / tmpvar_63);
    vUv_U = uv_64;
    vUvBounds_U = (tmpvar_65 / tmpvar_63.xyxy);
    lowp vec2 tmpvar_66;
    tmpvar_66 = vec2(textureSize (sColor2, 0));
    lowp vec3 uv_67;
    uv_67.z = tmpvar_59;
    lowp vec4 tmpvar_68;
    tmpvar_68.xy = (tmpvar_58.xy + vec2(0.5, 0.5));
    tmpvar_68.zw = (tmpvar_58.zw - vec2(0.5, 0.5));
    uv_67.xy = (mix (tmpvar_58.xy, tmpvar_58.zw, f_45) / tmpvar_66);
    vUv_V = uv_67;
    vUvBounds_V = (tmpvar_68 / tmpvar_66.xyxy);
  } else {
    if ((tmpvar_44 == 0)) {
      highp ivec2 tmpvar_69;
      tmpvar_69.x = int((uint(tmpvar_12.x) % 1024u));
      tmpvar_69.y = int((uint(tmpvar_12.x) / 1024u));
      highp vec4 tmpvar_70;
      tmpvar_70 = texelFetch (sGpuCache, tmpvar_69, 0);
      highp float tmpvar_71;
      tmpvar_71 = texelFetch (sGpuCache, (tmpvar_69 + ivec2(1, 0)), 0).x;
      highp ivec2 tmpvar_72;
      tmpvar_72.x = int((uint(tmpvar_12.y) % 1024u));
      tmpvar_72.y = int((uint(tmpvar_12.y) / 1024u));
      highp vec4 tmpvar_73;
      tmpvar_73 = texelFetch (sGpuCache, tmpvar_72, 0);
      highp float tmpvar_74;
      tmpvar_74 = texelFetch (sGpuCache, (tmpvar_72 + ivec2(1, 0)), 0).x;
      lowp vec2 tmpvar_75;
      tmpvar_75 = vec2(textureSize (sColor0, 0));
      lowp vec3 uv_76;
      uv_76.z = tmpvar_71;
      lowp vec4 tmpvar_77;
      tmpvar_77.xy = (tmpvar_70.xy + vec2(0.5, 0.5));
      tmpvar_77.zw = (tmpvar_70.zw - vec2(0.5, 0.5));
      uv_76.xy = (mix (tmpvar_70.xy, tmpvar_70.zw, f_45) / tmpvar_75);
      vUv_Y = uv_76;
      vUvBounds_Y = (tmpvar_77 / tmpvar_75.xyxy);
      lowp vec2 tmpvar_78;
      tmpvar_78 = vec2(textureSize (sColor1, 0));
      lowp vec3 uv_79;
      uv_79.z = tmpvar_74;
      lowp vec4 tmpvar_80;
      tmpvar_80.xy = (tmpvar_73.xy + vec2(0.5, 0.5));
      tmpvar_80.zw = (tmpvar_73.zw - vec2(0.5, 0.5));
      uv_79.xy = (mix (tmpvar_73.xy, tmpvar_73.zw, f_45) / tmpvar_78);
      vUv_U = uv_79;
      vUvBounds_U = (tmpvar_80 / tmpvar_78.xyxy);
    } else {
      if ((tmpvar_44 == 2)) {
        highp ivec2 tmpvar_81;
        tmpvar_81.x = int((uint(tmpvar_12.x) % 1024u));
        tmpvar_81.y = int((uint(tmpvar_12.x) / 1024u));
        highp vec4 tmpvar_82;
        tmpvar_82 = texelFetch (sGpuCache, tmpvar_81, 0);
        highp float tmpvar_83;
        tmpvar_83 = texelFetch (sGpuCache, (tmpvar_81 + ivec2(1, 0)), 0).x;
        lowp vec2 tmpvar_84;
        tmpvar_84 = vec2(textureSize (sColor0, 0));
        lowp vec3 uv_85;
        uv_85.z = tmpvar_83;
        lowp vec4 tmpvar_86;
        tmpvar_86.xy = (tmpvar_82.xy + vec2(0.5, 0.5));
        tmpvar_86.zw = (tmpvar_82.zw - vec2(0.5, 0.5));
        uv_85.xy = (mix (tmpvar_82.xy, tmpvar_82.zw, f_45) / tmpvar_84);
        vUv_Y = uv_85;
        vUvBounds_Y = (tmpvar_86 / tmpvar_84.xyxy);
      };
    };
  };
}

