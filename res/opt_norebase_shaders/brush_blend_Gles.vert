#version 300 es
precision highp sampler2DArray;
uniform mat4 uTransform;
in vec2 aPosition;
uniform sampler2DArray sColor0;
uniform highp sampler2D sRenderTasks;
uniform highp sampler2D sGpuCache;
flat out lowp vec4 vTransformBounds;
uniform highp sampler2D sTransformPalette;
uniform highp sampler2D sPrimitiveHeadersF;
uniform highp isampler2D sPrimitiveHeadersI;
in highp ivec4 aData;
flat out highp vec4 flat_varying_vec4_1;
flat out lowp vec4 flat_varying_vec4_2;
flat out highp vec4 flat_varying_vec4_3;
flat out highp vec4 flat_varying_vec4_4;
flat out highp ivec4 flat_varying_ivec4_0;
out lowp vec4 varying_vec4_0;
flat out highp mat4 vColorMat;
flat out highp int vFuncs[4];
void main ()
{
  highp int tmpvar_1;
  highp int tmpvar_2;
  highp int tmpvar_3;
  tmpvar_1 = (aData.y >> 16);
  tmpvar_2 = (aData.z & 65535);
  tmpvar_3 = (aData.z >> 16);
  highp float tmpvar_4;
  highp ivec2 tmpvar_5;
  highp uint tmpvar_6;
  tmpvar_6 = uint(aData.x);
  tmpvar_5.x = int((2u * (tmpvar_6 % 512u)));
  tmpvar_5.y = int((tmpvar_6 / 512u));
  highp vec4 tmpvar_7;
  tmpvar_7 = texelFetch (sPrimitiveHeadersF, tmpvar_5, 0);
  highp vec4 tmpvar_8;
  tmpvar_8 = texelFetch (sPrimitiveHeadersF, (tmpvar_5 + ivec2(1, 0)), 0);
  highp vec2 tmpvar_9;
  highp vec2 tmpvar_10;
  tmpvar_9 = tmpvar_7.xy;
  tmpvar_10 = tmpvar_7.zw;
  highp ivec2 tmpvar_11;
  tmpvar_11.x = int((2u * (tmpvar_6 % 512u)));
  tmpvar_11.y = int((tmpvar_6 / 512u));
  highp ivec4 tmpvar_12;
  tmpvar_12 = texelFetch (sPrimitiveHeadersI, tmpvar_11, 0);
  highp ivec4 tmpvar_13;
  tmpvar_13 = texelFetch (sPrimitiveHeadersI, (tmpvar_11 + ivec2(1, 0)), 0);
  tmpvar_4 = float(tmpvar_12.x);
  highp mat4 tmpvar_14;
  bool tmpvar_15;
  tmpvar_15 = ((tmpvar_12.z >> 24) == 0);
  highp int tmpvar_16;
  tmpvar_16 = (tmpvar_12.z & 16777215);
  highp ivec2 tmpvar_17;
  tmpvar_17.x = int((8u * (
    uint(tmpvar_16)
   % 128u)));
  tmpvar_17.y = int((uint(tmpvar_16) / 128u));
  tmpvar_14[0] = texelFetch (sTransformPalette, tmpvar_17, 0);
  tmpvar_14[1] = texelFetch (sTransformPalette, (tmpvar_17 + ivec2(1, 0)), 0);
  tmpvar_14[2] = texelFetch (sTransformPalette, (tmpvar_17 + ivec2(2, 0)), 0);
  tmpvar_14[3] = texelFetch (sTransformPalette, (tmpvar_17 + ivec2(3, 0)), 0);
  highp ivec2 tmpvar_18;
  tmpvar_18.x = int((2u * (
    uint(tmpvar_1)
   % 512u)));
  tmpvar_18.y = int((uint(tmpvar_1) / 512u));
  highp vec4 tmpvar_19;
  tmpvar_19 = texelFetch (sRenderTasks, tmpvar_18, 0);
  highp vec4 tmpvar_20;
  tmpvar_20 = texelFetch (sRenderTasks, (tmpvar_18 + ivec2(1, 0)), 0);
  lowp vec2 tmpvar_21;
  highp vec4 tmpvar_22;
  highp vec2 tmpvar_23;
  highp vec2 tmpvar_24;
  highp int tmpvar_25;
  tmpvar_25 = (tmpvar_3 & 255);
  highp int tmpvar_26;
  tmpvar_26 = ((tmpvar_3 >> 8) & 255);
  if ((tmpvar_2 == 65535)) {
    tmpvar_23 = tmpvar_9;
    tmpvar_24 = tmpvar_10;
  } else {
    highp int tmpvar_27;
    tmpvar_27 = ((tmpvar_12.y + 3) + (tmpvar_2 * 2));
    highp ivec2 tmpvar_28;
    tmpvar_28.x = int((uint(tmpvar_27) % 1024u));
    tmpvar_28.y = int((uint(tmpvar_27) / 1024u));
    highp vec4 tmpvar_29;
    tmpvar_29 = texelFetch (sGpuCache, tmpvar_28, 0);
    tmpvar_24 = tmpvar_29.zw;
    tmpvar_23 = (tmpvar_29.xy + tmpvar_7.xy);
  };
  if (tmpvar_15) {
    lowp vec2 tmpvar_30;
    tmpvar_30 = clamp ((tmpvar_23 + (tmpvar_24 * aPosition)), tmpvar_8.xy, (tmpvar_8.xy + tmpvar_8.zw));
    lowp vec4 tmpvar_31;
    tmpvar_31.zw = vec2(0.0, 1.0);
    tmpvar_31.xy = tmpvar_30;
    highp vec4 tmpvar_32;
    tmpvar_32 = (tmpvar_14 * tmpvar_31);
    highp vec4 tmpvar_33;
    tmpvar_33.xy = ((tmpvar_32.xy * tmpvar_20.y) + ((
      -(tmpvar_20.zw)
     + tmpvar_19.xy) * tmpvar_32.w));
    tmpvar_33.z = (tmpvar_4 * tmpvar_32.w);
    tmpvar_33.w = tmpvar_32.w;
    gl_Position = (uTransform * tmpvar_33);
    tmpvar_21 = tmpvar_30;
    tmpvar_22 = tmpvar_32;
  } else {
    lowp vec4 tmpvar_34;
    tmpvar_34 = mix(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0), bvec4(notEqual ((tmpvar_25 & ivec4(1, 2, 4, 8)), ivec4(0, 0, 0, 0))));
    lowp vec2 tmpvar_35;
    lowp vec2 tmpvar_36;
    tmpvar_35 = tmpvar_23;
    tmpvar_36 = tmpvar_24;
    highp vec2 tmpvar_37;
    tmpvar_37 = (tmpvar_8.xy + tmpvar_8.zw);
    lowp vec2 tmpvar_38;
    tmpvar_38 = clamp (tmpvar_35, tmpvar_8.xy, tmpvar_37);
    lowp vec2 tmpvar_39;
    tmpvar_39 = clamp ((tmpvar_35 + tmpvar_36), tmpvar_8.xy, tmpvar_37);
    lowp vec4 tmpvar_40;
    tmpvar_40 = (vec4(2.0, 2.0, 2.0, 2.0) * tmpvar_34);
    tmpvar_35 = (tmpvar_35 - tmpvar_40.xy);
    tmpvar_36 = (tmpvar_36 + (tmpvar_40.xy + tmpvar_40.zw));
    lowp vec2 tmpvar_41;
    tmpvar_41 = (tmpvar_35 + (tmpvar_36 * aPosition));
    lowp vec4 tmpvar_42;
    tmpvar_42.zw = vec2(0.0, 1.0);
    tmpvar_42.xy = tmpvar_41;
    highp vec4 tmpvar_43;
    tmpvar_43 = (tmpvar_14 * tmpvar_42);
    highp vec4 tmpvar_44;
    tmpvar_44.xy = ((tmpvar_43.xy * tmpvar_20.y) + ((tmpvar_19.xy - tmpvar_20.zw) * tmpvar_43.w));
    tmpvar_44.z = (tmpvar_4 * tmpvar_43.w);
    tmpvar_44.w = tmpvar_43.w;
    gl_Position = (uTransform * tmpvar_44);
    highp vec4 tmpvar_45;
    tmpvar_45.xy = clamp (tmpvar_7.xy, tmpvar_8.xy, tmpvar_37);
    tmpvar_45.zw = clamp ((tmpvar_7.xy + tmpvar_7.zw), tmpvar_8.xy, tmpvar_37);
    lowp vec4 tmpvar_46;
    tmpvar_46.xy = tmpvar_38;
    tmpvar_46.zw = tmpvar_39;
    vTransformBounds = mix (tmpvar_45, tmpvar_46, tmpvar_34);
    tmpvar_21 = tmpvar_41;
    tmpvar_22 = tmpvar_43;
  };
  highp vec2 tmpvar_47;
  highp vec2 tmpvar_48;
  highp ivec2 tmpvar_49;
  tmpvar_49.x = int((uint(tmpvar_13.x) % 1024u));
  tmpvar_49.y = int((uint(tmpvar_13.x) / 1024u));
  highp vec4 tmpvar_50;
  tmpvar_50 = texelFetch (sGpuCache, tmpvar_49, 0);
  tmpvar_47 = tmpvar_50.xy;
  tmpvar_48 = tmpvar_50.zw;
  highp float tmpvar_51;
  tmpvar_51 = texelFetch (sGpuCache, (tmpvar_49 + ivec2(1, 0)), 0).x;
  lowp vec2 tmpvar_52;
  tmpvar_52 = vec2(textureSize (sColor0, 0).xy);
  lowp vec2 tmpvar_53;
  tmpvar_53 = ((tmpvar_21 - tmpvar_7.xy) / tmpvar_7.zw);
  lowp vec2 tmpvar_54;
  highp int address_55;
  address_55 = (tmpvar_13.x + 2);
  highp ivec2 tmpvar_56;
  tmpvar_56.x = int((uint(address_55) % 1024u));
  tmpvar_56.y = int((uint(address_55) / 1024u));
  highp vec4 tmpvar_57;
  tmpvar_57 = mix (mix (texelFetch (sGpuCache, tmpvar_56, 0), texelFetch (sGpuCache, (tmpvar_56 + ivec2(1, 0)), 0), tmpvar_53.x), mix (texelFetch (sGpuCache, (tmpvar_56 + ivec2(2, 0)), 0), texelFetch (sGpuCache, (tmpvar_56 + ivec2(3, 0)), 0), tmpvar_53.x), tmpvar_53.y);
  tmpvar_54 = (tmpvar_57.xy / tmpvar_57.w);
  lowp vec2 tmpvar_58;
  tmpvar_58 = mix (tmpvar_50.xy, tmpvar_50.zw, tmpvar_54);
  highp float tmpvar_59;
  if (((tmpvar_26 & 1) != 0)) {
    tmpvar_59 = 1.0;
  } else {
    tmpvar_59 = 0.0;
  };
  highp float tmpvar_60;
  tmpvar_60 = mix (tmpvar_22.w, 1.0, tmpvar_59);
  varying_vec4_0.zw = ((tmpvar_58 / tmpvar_52) * tmpvar_60);
  flat_varying_vec4_4.x = tmpvar_51;
  flat_varying_vec4_4.y = tmpvar_59;
  highp vec4 tmpvar_61;
  tmpvar_61.xy = tmpvar_47;
  tmpvar_61.zw = tmpvar_48;
  flat_varying_vec4_2 = (tmpvar_61 / tmpvar_52.xyxy);
  varying_vec4_0.xy = tmpvar_21;
  highp float tmpvar_62;
  tmpvar_62 = (float(tmpvar_13.z) / 65536.0);
  highp float tmpvar_63;
  tmpvar_63 = (1.0 - tmpvar_62);
  flat_varying_ivec4_0.x = (tmpvar_13.y & 65535);
  flat_varying_vec4_4.z = tmpvar_62;
  vFuncs[0] = ((tmpvar_13.y >> 28) & 15);
  vFuncs[1] = ((tmpvar_13.y >> 24) & 15);
  vFuncs[2] = ((tmpvar_13.y >> 20) & 15);
  vFuncs[3] = ((tmpvar_13.y >> 16) & 15);
  bool tmpvar_64;
  tmpvar_64 = bool(0);
  bool tmpvar_65;
  tmpvar_65 = bool(0);
  highp int tmpvar_66;
  tmpvar_66 = flat_varying_ivec4_0.x;
  if ((1 == flat_varying_ivec4_0.x)) tmpvar_64 = bool(1);
  if (tmpvar_65) tmpvar_64 = bool(0);
  if (tmpvar_64) {
    highp vec4 tmpvar_67;
    tmpvar_67.w = 0.0;
    tmpvar_67.x = (0.2126 + (0.7874 * tmpvar_63));
    tmpvar_67.y = (0.2126 - (0.2126 * tmpvar_63));
    tmpvar_67.z = (0.2126 - (0.2126 * tmpvar_63));
    highp vec4 tmpvar_68;
    tmpvar_68.w = 0.0;
    tmpvar_68.x = (0.7152 - (0.7152 * tmpvar_63));
    tmpvar_68.y = (0.7152 + (0.2848 * tmpvar_63));
    tmpvar_68.z = (0.7152 - (0.7152 * tmpvar_63));
    highp vec4 tmpvar_69;
    tmpvar_69.w = 0.0;
    tmpvar_69.x = (0.0722 - (0.0722 * tmpvar_63));
    tmpvar_69.y = (0.0722 - (0.0722 * tmpvar_63));
    tmpvar_69.z = (0.0722 + (0.9278 * tmpvar_63));
    highp mat4 tmpvar_70;
    tmpvar_70[uint(0)] = tmpvar_67;
    tmpvar_70[1u] = tmpvar_68;
    tmpvar_70[2u] = tmpvar_69;
    tmpvar_70[3u] = vec4(0.0, 0.0, 0.0, 1.0);
    vColorMat = tmpvar_70;
    flat_varying_vec4_3 = vec4(0.0, 0.0, 0.0, 0.0);
    tmpvar_65 = bool(1);
  };
  if ((2 == flat_varying_ivec4_0.x)) tmpvar_64 = bool(1);
  if (tmpvar_65) tmpvar_64 = bool(0);
  if (tmpvar_64) {
    highp float tmpvar_71;
    tmpvar_71 = cos(tmpvar_62);
    highp float tmpvar_72;
    tmpvar_72 = sin(tmpvar_62);
    highp vec4 tmpvar_73;
    tmpvar_73.w = 0.0;
    tmpvar_73.x = ((0.2126 + (0.7874 * tmpvar_71)) - (0.2126 * tmpvar_72));
    tmpvar_73.y = ((0.2126 - (0.2126 * tmpvar_71)) + (0.143 * tmpvar_72));
    tmpvar_73.z = ((0.2126 - (0.2126 * tmpvar_71)) - (0.7874 * tmpvar_72));
    highp vec4 tmpvar_74;
    tmpvar_74.w = 0.0;
    tmpvar_74.x = ((0.7152 - (0.7152 * tmpvar_71)) - (0.7152 * tmpvar_72));
    tmpvar_74.y = ((0.7152 + (0.2848 * tmpvar_71)) + (0.14 * tmpvar_72));
    tmpvar_74.z = ((0.7152 - (0.7152 * tmpvar_71)) + (0.7152 * tmpvar_72));
    highp vec4 tmpvar_75;
    tmpvar_75.w = 0.0;
    tmpvar_75.x = ((0.0722 - (0.0722 * tmpvar_71)) + (0.9278 * tmpvar_72));
    tmpvar_75.y = ((0.0722 - (0.0722 * tmpvar_71)) - (0.283 * tmpvar_72));
    tmpvar_75.z = ((0.0722 + (0.9278 * tmpvar_71)) + (0.0722 * tmpvar_72));
    highp mat4 tmpvar_76;
    tmpvar_76[uint(0)] = tmpvar_73;
    tmpvar_76[1u] = tmpvar_74;
    tmpvar_76[2u] = tmpvar_75;
    tmpvar_76[3u] = vec4(0.0, 0.0, 0.0, 1.0);
    vColorMat = tmpvar_76;
    flat_varying_vec4_3 = vec4(0.0, 0.0, 0.0, 0.0);
    tmpvar_65 = bool(1);
  };
  if ((4 == flat_varying_ivec4_0.x)) tmpvar_64 = bool(1);
  if (tmpvar_65) tmpvar_64 = bool(0);
  if (tmpvar_64) {
    highp vec4 tmpvar_77;
    tmpvar_77.w = 0.0;
    tmpvar_77.x = ((tmpvar_63 * 0.2126) + tmpvar_62);
    tmpvar_77.y = (tmpvar_63 * 0.2126);
    tmpvar_77.z = (tmpvar_63 * 0.2126);
    highp vec4 tmpvar_78;
    tmpvar_78.w = 0.0;
    tmpvar_78.x = (tmpvar_63 * 0.7152);
    tmpvar_78.y = ((tmpvar_63 * 0.7152) + tmpvar_62);
    tmpvar_78.z = (tmpvar_63 * 0.7152);
    highp vec4 tmpvar_79;
    tmpvar_79.w = 0.0;
    tmpvar_79.x = (tmpvar_63 * 0.0722);
    tmpvar_79.y = (tmpvar_63 * 0.0722);
    tmpvar_79.z = ((tmpvar_63 * 0.0722) + tmpvar_62);
    highp mat4 tmpvar_80;
    tmpvar_80[uint(0)] = tmpvar_77;
    tmpvar_80[1u] = tmpvar_78;
    tmpvar_80[2u] = tmpvar_79;
    tmpvar_80[3u] = vec4(0.0, 0.0, 0.0, 1.0);
    vColorMat = tmpvar_80;
    flat_varying_vec4_3 = vec4(0.0, 0.0, 0.0, 0.0);
    tmpvar_65 = bool(1);
  };
  if ((5 == flat_varying_ivec4_0.x)) tmpvar_64 = bool(1);
  if (tmpvar_65) tmpvar_64 = bool(0);
  if (tmpvar_64) {
    highp vec4 tmpvar_81;
    tmpvar_81.w = 0.0;
    tmpvar_81.x = (0.393 + (0.607 * tmpvar_63));
    tmpvar_81.y = (0.349 - (0.349 * tmpvar_63));
    tmpvar_81.z = (0.272 - (0.272 * tmpvar_63));
    highp vec4 tmpvar_82;
    tmpvar_82.w = 0.0;
    tmpvar_82.x = (0.769 - (0.769 * tmpvar_63));
    tmpvar_82.y = (0.686 + (0.314 * tmpvar_63));
    tmpvar_82.z = (0.534 - (0.534 * tmpvar_63));
    highp vec4 tmpvar_83;
    tmpvar_83.w = 0.0;
    tmpvar_83.x = (0.189 - (0.189 * tmpvar_63));
    tmpvar_83.y = (0.168 - (0.168 * tmpvar_63));
    tmpvar_83.z = (0.131 + (0.869 * tmpvar_63));
    highp mat4 tmpvar_84;
    tmpvar_84[uint(0)] = tmpvar_81;
    tmpvar_84[1u] = tmpvar_82;
    tmpvar_84[2u] = tmpvar_83;
    tmpvar_84[3u] = vec4(0.0, 0.0, 0.0, 1.0);
    vColorMat = tmpvar_84;
    flat_varying_vec4_3 = vec4(0.0, 0.0, 0.0, 0.0);
    tmpvar_65 = bool(1);
  };
  if ((7 == flat_varying_ivec4_0.x)) tmpvar_64 = bool(1);
  if (tmpvar_65) tmpvar_64 = bool(0);
  if (tmpvar_64) {
    highp ivec2 tmpvar_85;
    tmpvar_85.x = int((uint(tmpvar_13.z) % 1024u));
    tmpvar_85.y = int((uint(tmpvar_13.z) / 1024u));
    highp int address_86;
    address_86 = (tmpvar_13.z + 4);
    highp ivec2 tmpvar_87;
    tmpvar_87.x = int((uint(address_86) % 1024u));
    tmpvar_87.y = int((uint(address_86) / 1024u));
    highp mat4 tmpvar_88;
    tmpvar_88[uint(0)] = texelFetch (sGpuCache, tmpvar_85, 0);
    tmpvar_88[1u] = texelFetch (sGpuCache, (tmpvar_85 + ivec2(1, 0)), 0);
    tmpvar_88[2u] = texelFetch (sGpuCache, (tmpvar_85 + ivec2(2, 0)), 0);
    tmpvar_88[3u] = texelFetch (sGpuCache, (tmpvar_85 + ivec2(3, 0)), 0);
    vColorMat = tmpvar_88;
    flat_varying_vec4_3 = texelFetch (sGpuCache, tmpvar_87, 0);
    tmpvar_65 = bool(1);
  };
  if ((11 == flat_varying_ivec4_0.x)) tmpvar_64 = bool(1);
  if (tmpvar_65) tmpvar_64 = bool(0);
  if (tmpvar_64) {
    flat_varying_ivec4_0.y = tmpvar_13.z;
    tmpvar_65 = bool(1);
  };
  if ((10 == tmpvar_66)) tmpvar_64 = bool(1);
  if (tmpvar_65) tmpvar_64 = bool(0);
  if (tmpvar_64) {
    highp ivec2 tmpvar_89;
    tmpvar_89.x = int((uint(tmpvar_13.z) % 1024u));
    tmpvar_89.y = int((uint(tmpvar_13.z) / 1024u));
    flat_varying_vec4_1 = texelFetch (sGpuCache, tmpvar_89, 0);
    tmpvar_65 = bool(1);
  };
  tmpvar_64 = bool(1);
  if (tmpvar_65) tmpvar_64 = bool(0);
  if (tmpvar_64) {
    tmpvar_65 = bool(1);
  };
}

