#version 300 es
precision highp sampler2DArray;
uniform mat4 uTransform;
in vec3 aPosition;
uniform sampler2DArray sColor0;
uniform highp sampler2D sGpuCache;
flat out highp vec4 vTransformBounds;
uniform highp sampler2D sTransformPalette;
in highp ivec2 aTransformIds;
in highp ivec4 aClipDataResourceAddress;
in vec2 aClipLocalPos;
in vec4 aClipTileRect;
in vec4 aClipDeviceArea;
in vec4 aClipOrigins;
in float aDevicePixelScale;
out highp vec4 vLocalPos;
out highp vec2 vClipMaskImageUv;
flat out lowp vec4 vClipMaskUvRect;
flat out lowp vec4 vClipMaskUvInnerRect;
flat out highp float vLayer;
void main ()
{
  highp float tmpvar_1;
  highp mat4 tmpvar_2;
  highp mat4 tmpvar_3;
  highp int tmpvar_4;
  tmpvar_4 = (aTransformIds.x & 16777215);
  highp ivec2 tmpvar_5;
  tmpvar_5.x = int((8u * (uint(
    uint(tmpvar_4)
   % 128u))));
  tmpvar_5.y = int((uint(tmpvar_4) / 128u));
  tmpvar_2[0] = texelFetch (sTransformPalette, tmpvar_5, 0);
  tmpvar_2[1] = texelFetch (sTransformPalette, (tmpvar_5 + ivec2(1, 0)), 0);
  tmpvar_2[2] = texelFetch (sTransformPalette, (tmpvar_5 + ivec2(2, 0)), 0);
  tmpvar_2[3] = texelFetch (sTransformPalette, (tmpvar_5 + ivec2(3, 0)), 0);
  tmpvar_3[0] = texelFetch (sTransformPalette, (tmpvar_5 + ivec2(4, 0)), 0);
  tmpvar_3[1] = texelFetch (sTransformPalette, (tmpvar_5 + ivec2(5, 0)), 0);
  tmpvar_3[2] = texelFetch (sTransformPalette, (tmpvar_5 + ivec2(6, 0)), 0);
  tmpvar_3[3] = texelFetch (sTransformPalette, (tmpvar_5 + ivec2(7, 0)), 0);
  highp mat4 tmpvar_6;
  highp int tmpvar_7;
  tmpvar_7 = (aTransformIds.y & 16777215);
  highp ivec2 tmpvar_8;
  tmpvar_8.x = int((8u * (uint(
    uint(tmpvar_7)
   % 128u))));
  tmpvar_8.y = int((uint(tmpvar_7) / 128u));
  tmpvar_6[0] = texelFetch (sTransformPalette, tmpvar_8, 0);
  tmpvar_6[1] = texelFetch (sTransformPalette, (tmpvar_8 + ivec2(1, 0)), 0);
  tmpvar_6[2] = texelFetch (sTransformPalette, (tmpvar_8 + ivec2(2, 0)), 0);
  tmpvar_6[3] = texelFetch (sTransformPalette, (tmpvar_8 + ivec2(3, 0)), 0);
  highp vec2 tmpvar_9;
  highp vec2 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = texelFetch (sGpuCache, aClipDataResourceAddress.zw, 0);
  tmpvar_9 = tmpvar_11.xy;
  tmpvar_10 = tmpvar_11.zw;
  tmpvar_1 = texelFetch (sGpuCache, (aClipDataResourceAddress.zw + ivec2(1, 0)), 0).x;
  highp vec2 tmpvar_12;
  highp vec2 tmpvar_13;
  tmpvar_12 = aClipLocalPos;
  tmpvar_13 = texelFetch (sGpuCache, aClipDataResourceAddress.xy, 0).xy;
  highp vec4 pos_14;
  vec4 tmpvar_15;
  tmpvar_15.zw = vec2(0.0, 1.0);
  tmpvar_15.xy = (((aClipOrigins.zw + aClipDeviceArea.xy) + (aPosition.xy * aClipDeviceArea.zw)) / aDevicePixelScale);
  highp vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_6 * tmpvar_15);
  pos_14.w = tmpvar_16.w;
  pos_14.xyz = (tmpvar_16.xyz / tmpvar_16.w);
  highp vec2 pos_17;
  pos_17 = pos_14.xy;
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_2 * vec4(0.0, 0.0, 0.0, 1.0));
  highp vec3 tmpvar_19;
  highp vec3 tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_19 = tmpvar_3[uint(0)].xyz;
  tmpvar_20 = tmpvar_3[1u].xyz;
  tmpvar_21 = tmpvar_3[2u].xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0].x = tmpvar_19.x;
  tmpvar_22[1].x = tmpvar_19.y;
  tmpvar_22[2].x = tmpvar_19.z;
  tmpvar_22[0].y = tmpvar_20.x;
  tmpvar_22[1].y = tmpvar_20.y;
  tmpvar_22[2].y = tmpvar_20.z;
  tmpvar_22[0].z = tmpvar_21.x;
  tmpvar_22[1].z = tmpvar_21.y;
  tmpvar_22[2].z = tmpvar_21.z;
  highp vec3 tmpvar_23;
  tmpvar_23.z = -10000.0;
  tmpvar_23.xy = pos_17;
  highp vec3 normal_24;
  normal_24 = (tmpvar_22 * vec3(0.0, 0.0, 1.0));
  highp vec3 pt_25;
  pt_25 = (tmpvar_18.xyz / tmpvar_18.w);
  highp float t_26;
  highp float tmpvar_27;
  tmpvar_27 = abs(normal_24.z);
  if ((tmpvar_27 > 1e-06)) {
    t_26 = (dot ((pt_25 - tmpvar_23), normal_24) / normal_24.z);
  };
  highp vec4 tmpvar_28;
  tmpvar_28.w = 1.0;
  tmpvar_28.xy = pos_17;
  tmpvar_28.z = (-10000.0 + t_26);
  highp vec4 tmpvar_29;
  tmpvar_29 = ((tmpvar_3 * tmpvar_28) * tmpvar_16.w);
  vec4 tmpvar_30;
  tmpvar_30.zw = vec2(0.0, 1.0);
  tmpvar_30.xy = ((aClipOrigins.xy + aClipDeviceArea.xy) + (aPosition.xy * aClipDeviceArea.zw));
  gl_Position = (uTransform * tmpvar_30);
  highp vec4 tmpvar_31;
  tmpvar_31.xy = tmpvar_12;
  tmpvar_31.zw = (aClipLocalPos + tmpvar_13);
  vTransformBounds = tmpvar_31;
  vLocalPos = tmpvar_29;
  vLayer = tmpvar_1;
  vClipMaskImageUv = ((tmpvar_29.xy - (aClipTileRect.xy * tmpvar_29.w)) / aClipTileRect.zw);
  lowp vec2 tmpvar_32;
  tmpvar_32 = vec3(textureSize (sColor0, 0)).xy;
  highp vec4 tmpvar_33;
  tmpvar_33.xy = tmpvar_9;
  tmpvar_33.zw = (tmpvar_11.zw - tmpvar_11.xy);
  vClipMaskUvRect = (tmpvar_33 / tmpvar_32.xyxy);
  highp vec4 tmpvar_34;
  tmpvar_34.xy = tmpvar_9;
  tmpvar_34.zw = tmpvar_10;
  vClipMaskUvInnerRect = ((tmpvar_34 + vec4(0.5, 0.5, -0.5, -0.5)) / tmpvar_32.xyxy);
}

