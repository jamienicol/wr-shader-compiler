#version 310 es
precision highp sampler2DArray;
uniform mat4 uTransform;
in vec3 aPosition;
uniform sampler2D sColor0;
uniform sampler2D sColor1;
uniform sampler2D sColor2;
uniform highp sampler2D sRenderTasks;
uniform highp sampler2D sGpuCache;
flat out lowp vec4 vTransformBounds;
uniform highp sampler2D sTransformPalette;
uniform highp sampler2D sPrimitiveHeadersF;
uniform highp isampler2D sPrimitiveHeadersI;
in highp ivec4 aData;
out lowp vec3 vUv_Y;
flat out lowp vec4 vUvBounds_Y;
out lowp vec3 vUv_U;
flat out lowp vec4 vUvBounds_U;
out lowp vec3 vUv_V;
flat out lowp vec4 vUvBounds_V;
flat out highp float vCoefficient;
flat out mat3 vYuvColorMatrix;
flat out highp int vFormat;
void main ()
{
  lowp vec2 tmpvar_1;
  highp vec2 tmpvar_2;
  highp vec2 tmpvar_3;
  highp int tmpvar_4;
  highp int tmpvar_5;
  tmpvar_4 = (aData.y >> 16);
  tmpvar_5 = (aData.z & 65535);
  highp int tmpvar_6;
  tmpvar_6 = ((aData.z >> 16) & 255);
  highp float tmpvar_7;
  highp ivec2 tmpvar_8;
  highp uint tmpvar_9;
  tmpvar_9 = uint(aData.x);
  tmpvar_8.x = int((2u * (uint(tmpvar_9 % 512u))));
  tmpvar_8.y = int((tmpvar_9 / 512u));
  highp vec4 tmpvar_10;
  tmpvar_10 = texelFetch (sPrimitiveHeadersF, tmpvar_8, 0);
  highp vec4 tmpvar_11;
  tmpvar_11 = texelFetch (sPrimitiveHeadersF, (tmpvar_8 + ivec2(1, 0)), 0);
  highp vec2 tmpvar_12;
  highp vec2 tmpvar_13;
  tmpvar_12 = tmpvar_10.xy;
  tmpvar_13 = tmpvar_10.zw;
  highp ivec2 tmpvar_14;
  tmpvar_14.x = int((2u * (uint(tmpvar_9 % 512u))));
  tmpvar_14.y = int((tmpvar_9 / 512u));
  highp ivec4 tmpvar_15;
  tmpvar_15 = texelFetch (sPrimitiveHeadersI, tmpvar_14, 0);
  highp ivec4 tmpvar_16;
  tmpvar_16 = texelFetch (sPrimitiveHeadersI, (tmpvar_14 + ivec2(1, 0)), 0);
  tmpvar_7 = float(tmpvar_15.x);
  if ((tmpvar_5 == 65535)) {
    tmpvar_2 = tmpvar_12;
    tmpvar_3 = tmpvar_13;
  } else {
    highp int tmpvar_17;
    tmpvar_17 = ((tmpvar_15.y + 1) + (tmpvar_5 * 2));
    highp ivec2 tmpvar_18;
    tmpvar_18.x = int((uint(uint(tmpvar_17) % 1024u)));
    tmpvar_18.y = int((uint(tmpvar_17) / 1024u));
    highp vec4 tmpvar_19;
    tmpvar_19 = texelFetch (sGpuCache, tmpvar_18, 0);
    tmpvar_3 = tmpvar_19.zw;
    tmpvar_2 = (tmpvar_19.xy + tmpvar_10.xy);
  };
  highp ivec2 tmpvar_20;
  tmpvar_20.x = int((2u * (uint(
    uint(tmpvar_4)
   % 512u))));
  tmpvar_20.y = int((uint(tmpvar_4) / 512u));
  highp vec4 tmpvar_21;
  tmpvar_21 = texelFetch (sRenderTasks, tmpvar_20, 0);
  highp vec4 tmpvar_22;
  tmpvar_22 = texelFetch (sRenderTasks, (tmpvar_20 + ivec2(1, 0)), 0);
  highp mat4 tmpvar_23;
  highp int tmpvar_24;
  tmpvar_24 = (tmpvar_15.z & 16777215);
  highp ivec2 tmpvar_25;
  tmpvar_25.x = int((8u * (uint(
    uint(tmpvar_24)
   % 128u))));
  tmpvar_25.y = int((uint(tmpvar_24) / 128u));
  tmpvar_23[0] = texelFetch (sTransformPalette, tmpvar_25, 0);
  tmpvar_23[1] = texelFetch (sTransformPalette, (tmpvar_25 + ivec2(1, 0)), 0);
  tmpvar_23[2] = texelFetch (sTransformPalette, (tmpvar_25 + ivec2(2, 0)), 0);
  tmpvar_23[3] = texelFetch (sTransformPalette, (tmpvar_25 + ivec2(3, 0)), 0);
  if (((tmpvar_15.z >> 24) == 0)) {
    lowp vec2 tmpvar_26;
    tmpvar_26 = clamp ((tmpvar_2 + (tmpvar_3 * aPosition.xy)), tmpvar_11.xy, (tmpvar_11.xy + tmpvar_11.zw));
    lowp vec4 tmpvar_27;
    tmpvar_27.zw = vec2(0.0, 1.0);
    tmpvar_27.xy = tmpvar_26;
    highp vec4 tmpvar_28;
    tmpvar_28 = (tmpvar_23 * tmpvar_27);
    highp vec4 tmpvar_29;
    tmpvar_29.xy = ((tmpvar_28.xy * tmpvar_22.y) + ((
      -(tmpvar_22.zw)
     + tmpvar_21.xy) * tmpvar_28.w));
    tmpvar_29.z = (tmpvar_7 * tmpvar_28.w);
    tmpvar_29.w = tmpvar_28.w;
    gl_Position = (uTransform * tmpvar_29);
    tmpvar_1 = tmpvar_26;
  } else {
    lowp vec4 tmpvar_30;
    tmpvar_30 = mix(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0), bvec4(notEqual ((tmpvar_6 & ivec4(1, 2, 4, 8)), ivec4(0, 0, 0, 0))));
    lowp vec2 tmpvar_31;
    lowp vec2 tmpvar_32;
    tmpvar_31 = tmpvar_2;
    tmpvar_32 = tmpvar_3;
    highp vec2 tmpvar_33;
    tmpvar_33 = (tmpvar_11.xy + tmpvar_11.zw);
    lowp vec2 tmpvar_34;
    tmpvar_34 = clamp (tmpvar_31, tmpvar_11.xy, tmpvar_33);
    lowp vec2 tmpvar_35;
    tmpvar_35 = clamp ((tmpvar_31 + tmpvar_32), tmpvar_11.xy, tmpvar_33);
    lowp vec4 tmpvar_36;
    tmpvar_36 = (vec4(2.0, 2.0, 2.0, 2.0) * tmpvar_30);
    tmpvar_31 = (tmpvar_31 - tmpvar_36.xy);
    tmpvar_32 = (tmpvar_32 + (tmpvar_36.xy + tmpvar_36.zw));
    lowp vec2 tmpvar_37;
    tmpvar_37 = (tmpvar_31 + (tmpvar_32 * aPosition.xy));
    lowp vec4 tmpvar_38;
    tmpvar_38.zw = vec2(0.0, 1.0);
    tmpvar_38.xy = tmpvar_37;
    highp vec4 tmpvar_39;
    tmpvar_39 = (tmpvar_23 * tmpvar_38);
    highp vec4 tmpvar_40;
    tmpvar_40.xy = ((tmpvar_39.xy * tmpvar_22.y) + ((tmpvar_21.xy - tmpvar_22.zw) * tmpvar_39.w));
    tmpvar_40.z = (tmpvar_7 * tmpvar_39.w);
    tmpvar_40.w = tmpvar_39.w;
    gl_Position = (uTransform * tmpvar_40);
    highp vec4 tmpvar_41;
    tmpvar_41.xy = clamp (tmpvar_10.xy, tmpvar_11.xy, tmpvar_33);
    tmpvar_41.zw = clamp ((tmpvar_10.xy + tmpvar_10.zw), tmpvar_11.xy, tmpvar_33);
    lowp vec4 tmpvar_42;
    tmpvar_42.xy = tmpvar_34;
    tmpvar_42.zw = tmpvar_35;
    vTransformBounds = mix (tmpvar_41, tmpvar_42, tmpvar_30);
    tmpvar_1 = tmpvar_37;
  };
  lowp vec2 f_43;
  f_43 = ((tmpvar_1 - tmpvar_10.xy) / tmpvar_10.zw);
  highp ivec2 tmpvar_44;
  tmpvar_44.x = int((uint(uint(tmpvar_15.y) % 1024u)));
  tmpvar_44.y = int((uint(tmpvar_15.y) / 1024u));
  highp vec4 tmpvar_45;
  tmpvar_45 = texelFetch (sGpuCache, tmpvar_44, 0);
  highp int tmpvar_46;
  highp int tmpvar_47;
  tmpvar_46 = int(tmpvar_45.y);
  tmpvar_47 = int(tmpvar_45.z);
  vCoefficient = tmpvar_45.x;
  if ((tmpvar_46 == 0)) {
    vYuvColorMatrix = mat3(1.16438, 1.16438, 1.16438, 0.0, -0.39176, 2.01723, 1.59603, -0.81297, 0.0);
  } else {
    if ((tmpvar_46 == 1)) {
      vYuvColorMatrix = mat3(1.16438, 1.16438, 1.16438, 0.0, -0.21325, 2.1124, 1.79274, -0.53291, 0.0);
    } else {
      vYuvColorMatrix = mat3(1.164384, 1.164384, 1.164384, 0.0, -0.1873261, 2.141772, 1.678674, -0.6504243, 0.0);
    };
  };
  vFormat = tmpvar_47;
  if ((tmpvar_47 == 1)) {
    lowp vec2 texture_size_48;
    texture_size_48 = vec2(textureSize (sColor0, 0));
    lowp vec3 uv_49;
    highp ivec2 tmpvar_50;
    tmpvar_50.x = int((uint(uint(tmpvar_16.x) % 1024u)));
    tmpvar_50.y = int((uint(tmpvar_16.x) / 1024u));
    highp vec4 tmpvar_51;
    tmpvar_51 = texelFetch (sGpuCache, tmpvar_50, 0);
    highp float tmpvar_52;
    tmpvar_52 = texelFetch (sGpuCache, (tmpvar_50 + ivec2(1, 0)), 0).x;
    lowp float tmpvar_53;
    tmpvar_53 = tmpvar_52;
    uv_49.z = tmpvar_53;
    lowp vec4 tmpvar_54;
    tmpvar_54.xy = (tmpvar_51.xy + vec2(0.5, 0.5));
    tmpvar_54.zw = (tmpvar_51.zw - vec2(0.5, 0.5));
    uv_49.xy = (mix (tmpvar_51.xy, tmpvar_51.zw, f_43) / texture_size_48);
    vUv_Y = uv_49;
    vUvBounds_Y = (tmpvar_54 / texture_size_48.xyxy);
    lowp vec2 texture_size_55;
    texture_size_55 = vec2(textureSize (sColor1, 0));
    lowp vec3 uv_56;
    highp ivec2 tmpvar_57;
    tmpvar_57.x = int((uint(uint(tmpvar_16.y) % 1024u)));
    tmpvar_57.y = int((uint(tmpvar_16.y) / 1024u));
    highp vec4 tmpvar_58;
    tmpvar_58 = texelFetch (sGpuCache, tmpvar_57, 0);
    highp float tmpvar_59;
    tmpvar_59 = texelFetch (sGpuCache, (tmpvar_57 + ivec2(1, 0)), 0).x;
    lowp float tmpvar_60;
    tmpvar_60 = tmpvar_59;
    uv_56.z = tmpvar_60;
    lowp vec4 tmpvar_61;
    tmpvar_61.xy = (tmpvar_58.xy + vec2(0.5, 0.5));
    tmpvar_61.zw = (tmpvar_58.zw - vec2(0.5, 0.5));
    uv_56.xy = (mix (tmpvar_58.xy, tmpvar_58.zw, f_43) / texture_size_55);
    vUv_U = uv_56;
    vUvBounds_U = (tmpvar_61 / texture_size_55.xyxy);
    lowp vec2 texture_size_62;
    texture_size_62 = vec2(textureSize (sColor2, 0));
    lowp vec3 uv_63;
    highp ivec2 tmpvar_64;
    tmpvar_64.x = int((uint(uint(tmpvar_16.z) % 1024u)));
    tmpvar_64.y = int((uint(tmpvar_16.z) / 1024u));
    highp vec4 tmpvar_65;
    tmpvar_65 = texelFetch (sGpuCache, tmpvar_64, 0);
    highp float tmpvar_66;
    tmpvar_66 = texelFetch (sGpuCache, (tmpvar_64 + ivec2(1, 0)), 0).x;
    lowp float tmpvar_67;
    tmpvar_67 = tmpvar_66;
    uv_63.z = tmpvar_67;
    lowp vec4 tmpvar_68;
    tmpvar_68.xy = (tmpvar_65.xy + vec2(0.5, 0.5));
    tmpvar_68.zw = (tmpvar_65.zw - vec2(0.5, 0.5));
    uv_63.xy = (mix (tmpvar_65.xy, tmpvar_65.zw, f_43) / texture_size_62);
    vUv_V = uv_63;
    vUvBounds_V = (tmpvar_68 / texture_size_62.xyxy);
  } else {
    if ((tmpvar_47 == 0)) {
      lowp vec2 texture_size_69;
      texture_size_69 = vec2(textureSize (sColor0, 0));
      lowp vec3 uv_70;
      highp ivec2 tmpvar_71;
      tmpvar_71.x = int((uint(uint(tmpvar_16.x) % 1024u)));
      tmpvar_71.y = int((uint(tmpvar_16.x) / 1024u));
      highp vec4 tmpvar_72;
      tmpvar_72 = texelFetch (sGpuCache, tmpvar_71, 0);
      highp float tmpvar_73;
      tmpvar_73 = texelFetch (sGpuCache, (tmpvar_71 + ivec2(1, 0)), 0).x;
      lowp float tmpvar_74;
      tmpvar_74 = tmpvar_73;
      uv_70.z = tmpvar_74;
      lowp vec4 tmpvar_75;
      tmpvar_75.xy = (tmpvar_72.xy + vec2(0.5, 0.5));
      tmpvar_75.zw = (tmpvar_72.zw - vec2(0.5, 0.5));
      uv_70.xy = (mix (tmpvar_72.xy, tmpvar_72.zw, f_43) / texture_size_69);
      vUv_Y = uv_70;
      vUvBounds_Y = (tmpvar_75 / texture_size_69.xyxy);
      lowp vec2 texture_size_76;
      texture_size_76 = vec2(textureSize (sColor1, 0));
      lowp vec3 uv_77;
      highp ivec2 tmpvar_78;
      tmpvar_78.x = int((uint(uint(tmpvar_16.y) % 1024u)));
      tmpvar_78.y = int((uint(tmpvar_16.y) / 1024u));
      highp vec4 tmpvar_79;
      tmpvar_79 = texelFetch (sGpuCache, tmpvar_78, 0);
      highp float tmpvar_80;
      tmpvar_80 = texelFetch (sGpuCache, (tmpvar_78 + ivec2(1, 0)), 0).x;
      lowp float tmpvar_81;
      tmpvar_81 = tmpvar_80;
      uv_77.z = tmpvar_81;
      lowp vec4 tmpvar_82;
      tmpvar_82.xy = (tmpvar_79.xy + vec2(0.5, 0.5));
      tmpvar_82.zw = (tmpvar_79.zw - vec2(0.5, 0.5));
      uv_77.xy = (mix (tmpvar_79.xy, tmpvar_79.zw, f_43) / texture_size_76);
      vUv_U = uv_77;
      vUvBounds_U = (tmpvar_82 / texture_size_76.xyxy);
    } else {
      if ((tmpvar_47 == 2)) {
        lowp vec2 texture_size_83;
        texture_size_83 = vec2(textureSize (sColor0, 0));
        lowp vec3 uv_84;
        highp ivec2 tmpvar_85;
        tmpvar_85.x = int((uint(uint(tmpvar_16.x) % 1024u)));
        tmpvar_85.y = int((uint(tmpvar_16.x) / 1024u));
        highp vec4 tmpvar_86;
        tmpvar_86 = texelFetch (sGpuCache, tmpvar_85, 0);
        highp float tmpvar_87;
        tmpvar_87 = texelFetch (sGpuCache, (tmpvar_85 + ivec2(1, 0)), 0).x;
        lowp float tmpvar_88;
        tmpvar_88 = tmpvar_87;
        uv_84.z = tmpvar_88;
        lowp vec4 tmpvar_89;
        tmpvar_89.xy = (tmpvar_86.xy + vec2(0.5, 0.5));
        tmpvar_89.zw = (tmpvar_86.zw - vec2(0.5, 0.5));
        uv_84.xy = (mix (tmpvar_86.xy, tmpvar_86.zw, f_43) / texture_size_83);
        vUv_Y = uv_84;
        vUvBounds_Y = (tmpvar_89 / texture_size_83.xyxy);
      };
    };
  };
}

